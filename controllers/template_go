package controllers

import (
	r "adminlte/routers"
	"adminlte/models"
	"adminlte/libs"
	"fmt"
	//	"reflect"
	"github.com/astaxie/beego"

//	sort "adminlte/libs/sortutil"
	
)

type TestController struct {
	BaseController
}

//每个controller 有这样的命名规则,保证不重复
var _test_ctl TestController

func init(){
	//在这儿独立处理映身关系
	// 事实上只有 方法是 get的 Route才应该是 Is_menu显示出来
	_ctl := &_test_ctl
	_cate := r.MenuOpt
	
 	_ctl.routes = append( _ctl.routes,
r.Route{Path:"/test",Name:"代理列表",Category:_cate,Is_menu :true, Order:1.2,Is_open:true, Methods:"get:TestGet"})

 	_ctl.routes = append( _ctl.routes,
		r.Route{Path:"/test",Name:"代理列表",Category:_cate,Is_menu :false, Order:1.3,Is_open:true, Methods:"post:TestPost"})
	
	_ctl.routes = append( _ctl.routes,
		r.Route{Path:"/test/api", Name:"代理测试",Category:_cate,Is_menu:true, Order:1.4,Is_open:true, Methods:"*:Test"})
	
	_ctl.AddRoutes()
	
}

//把this中的routes 放到 routers.Permits 中,每个Controller写一遍
func (this *TestController) AddRoutes() {
	
	for i,v := range  this.routes {
		if v.Methods != "" {
			beego.Router(v.Path, this, v.Methods)
		}else{
			beego.Router(v.Path, this)
		}
		
		//Permits.routes is map,so no confict path key ! 
		r.Permits.Add_route(v.Path,&this.routes[i])
	}
	
}

//主要做Form的要关准备
func (this *TestController) GuuPrepare(){
	
	this.TplName = libs.GetTplName(this)
	
	this.Data["msg"] = ""	
}

//------------------------------------------------------------

